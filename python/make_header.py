def get_externs( lines ):
    externs = []
    for line in lines:
        if line[:len('extern')] == 'extern':
            # print line
            externs.append(line)
    return externs
            
def get_static_index( lines ):
    for line in lines:
        if line[:len('static')] == 'static':
            return lines.index(line)
            
def get_end_of_static_index( lines, start_index ):
    for line in lines[start_index:]:
        if line[0] == '}':
            return lines.index(line)
            
def write_message( f ):
    f.write("""\
/* 
 *  This header file is automatically generated by
 *  Kelly's brilliant Python script make_header.py.
 *  Don't bother modifying it.
 */
 
""")
    
def yeah_baby( fmain, fnomain ):           
    lines = fmain.readlines()
    externs = get_externs(lines)
    start = get_static_index( lines )
    end = get_end_of_static_index( lines, start )
    big_static = [ lines[start][len('static '):] ] + lines[start+1:end+1]
    write_message( fnomain )
    for line in externs:
        #print line
        fnomain.write(line)
    fnomain.write('\n\n')
    for line in big_static:
        #print line
    	fnomain.write(line)
	
if __name__ == '__main__':
    import sys
    argv = sys.argv
    # print argv
    if ( len(argv) < 3 ):
        print 'specify input file (like frozen.c) and output file names'
    else:
        print 'generating', argv[2], 'from', argv[1]
        fin = open(argv[1], 'r')
        fout = open(argv[2], 'w')
        yeah_baby( fin, fout )
